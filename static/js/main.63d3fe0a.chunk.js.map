{"version":3,"sources":["components/Header.js","components/About.js","components/Resume.js","components/Portfolio.js","components/ContactUs.js","components/Footer.js","resumeData.js","App.js","serviceWorker.js","index.js"],"names":["Header","_Component","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","apply","arguments","inherits","createClass","key","value","resumeData","props","react_default","a","createElement","Fragment","id","className","href","title","name","style","color","fontFamily","roleDescription","socialLinks","map","item","url","target","Component","About","src","alt","aboutme","Resume","education","UniversityName","specialization","MonthOfPassing","YearOfPassing","Achievements","work","CompanyName","MonthOfLeaving","YearOfLeaving","skillsDescription","skills","concat","skillname","toLowerCase","Porfolio","portfolio","imgurl","description","imgrepo","imglink","ContactUs","width","Footer","role","linkedinId","email","address","website","App","Header_Header","About_About","Resume_Resume","Portfolio_Porfolio","ContactUs_ContactUs","Footer_Footer","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.63d3fe0a.chunk.js","sourcesContent":["import React, { Component } from 'react';\nexport default class Header extends Component {\n  render() {\n    let resumeData = this.props.resumeData;\n    return (\n      <React.Fragment>\n      \n      <header id=\"home\">\n         <nav id=\"nav-wrap\">\n            <a className=\"mobile-btn\" href=\"#nav-wrap\" title=\"Show navigation\">Show navigation</a>\n          <a className=\"mobile-btn\" href=\"#\" title=\"Hide navigation\">Hide navigation</a>\n            <ul id=\"nav\" className=\"nav\">\n               <li className=\"current\"><a className=\"smoothscroll\" href=\"#home\">Home</a></li>\n               <li><a className=\"smoothscroll\" href=\"#about\">About</a></li>\n             <li><a className=\"smoothscroll\" href=\"#resume\">Resume</a></li>\n               <li><a className=\"smoothscroll\" href=\"#portfolio\">Works</a></li>\n               <li><a className=\"smoothscroll\" href=\"#contact\">Contact</a></li>\n            </ul>\n         </nav>\n\n         <div className=\"row banner\">\n            <div className=\"banner-text\">\n               <h1 className=\"responsive-headline\">I am {resumeData.name}.</h1>\n               <h3 style={{color:'#fff', fontFamily:'sans-serif '}}>{resumeData.roleDescription}\n               </h3>\n               <hr/>\n               <ul className=\"social\">\n                  {\n                    resumeData.socialLinks && resumeData.socialLinks.map(item =>{\n                      return(\n                              <li key={item.name}>\n                                <a href={item.url} target=\"_blank\"><i className={item.className}></i></a>\n                              </li>\n                            )\n                          }\n                    )\n                  }\n               </ul>\n            </div>\n         </div>\n\n         <p className=\"scrolldown\">\n            <a className=\"smoothscroll\" href=\"#about\"><i className=\"icon-down-circle\"></i></a>\n         </p>\n\n      </header>\n      </React.Fragment>\n    );\n  }\n}","import React, { Component } from 'react';\nexport default class About extends Component {\n  render() {\n    let resumeData = this.props.resumeData;\n    return (\n      <section id=\"about\">\n         <div className=\"row\">\n\n            <div className=\"three columns\">\n\n               <img className=\"profile-pic\"  src=\"images/profilepic.jpg\" alt=\"\" />\n\n            </div>\n\n            <div className=\"nine columns main-col\">\n\n               <h2>About Me</h2>\n               <p>\n               {\n                 resumeData.aboutme\n               }\n               </p>\n\n               {/* <div className=\"row\">\n\n                  <div className=\"columns contact-details\">\n\n                  <h2>Contact Details</h2>\n                  <p className=\"address\">\n       \t\t\t\t\t\t<span>{resumeData.name}</span>\n                     <br></br>\n       \t\t\t\t\t\t   <span>\n                     {resumeData.address}\n                    </span>\n                    <br></br>\n                    <span>{resumeData.website}</span>\n       \t\t\t\t\t   </p>\n                  </div>\n               </div> */}\n            </div>\n         </div>\n      </section>\n    );\n  }\n}","import React, { Component } from 'react';\nexport default  class Resume extends Component {\n  render() {\n    let resumeData = this.props.resumeData;\n    return (\n      <section id=\"resume\">\n\n         <div className=\"row education\">\n\n            <div className=\"three columns header-col\">\n               <h1><span>Education</span></h1>\n            </div>\n\n            <div className=\"nine columns main-col\">\n              {\n                resumeData.education && resumeData.education.map((item)=>{\n                  return(\n                    <div className=\"row item\">\n                       <div className=\"twelve columns\">\n                          <h3>{item.UniversityName}</h3>\n                          <p className=\"info\">\n                          {item.specialization}\n                          <span>&bull;</span> <em className=\"date\">{item.MonthOfPassing} {item.YearOfPassing}</em></p>\n                          <p>\n                          {item.Achievements}\n                          </p>\n                       </div>\n                    </div>\n                  )\n                })\n              }\n            </div>\n         </div>\n        <div className=\"row work\">\n            <div className=\"three columns header-col\">\n               <h1><span>Work</span></h1>\n            </div>\n\n            <div className=\"nine columns main-col\">\n              {\n                resumeData.work && resumeData.work.map((item) => {\n                  return(\n                    <div className=\"row item\">\n                       <div className=\"twelve columns\">\n                          <h3>{item.CompanyName}</h3>\n                          <p className=\"info\">\n                          {item.specialization}\n                          <span>&bull;</span> <em className=\"date\">{item.MonthOfLeaving} {item.YearOfLeaving}</em></p>\n                          {}\n                          <p>\n                          {item.Achievements}\n                          </p>\n                       </div>\n\n                    </div>\n\n                  )\n                })\n              }\n            </div> \n         </div>\n\n\n         <div className=\"row skill\">\n\n            <div className=\"three columns header-col\">\n               <h1><span>Skills</span></h1>\n            </div>\n\n            <div className=\"nine columns main-col\">\n\n               <p>\n               {resumeData.skillsDescription}\n               </p>\n\n   \t\t\t\t<div className=\"bars\">\n\n   \t\t\t\t   <ul className=\"skills\">\n                {\n                  resumeData.skills && resumeData.skills.map((item) => {\n                    return(\n                      <li>\n                      <span className={`bar-expand ${item.skillname.toLowerCase()}`}>\n                      </span><em>{item.skillname}</em>\n                      </li>\n                    )\n                  })\n                }\n\n   \t\t\t\t\t</ul>\n\n   \t\t\t\t</div>\n\n   \t\t\t</div>\n\n         </div>\n\n      </section>\n    );\n  }\n}","import React, { Component } from 'react';\nexport default class Porfolio extends Component {\n  render() {\n    let resumeData = this.props.resumeData;\n    return (\n      <section id=\"portfolio\">\n      <div className=\"row\">\n        <div className=\"twelve columns collapsed\">\n          <h1>Check Out Some of My Work</h1>\n          <div id=\"portfolio-wrapper\" className=\"bgrid-quarters s-bgrid-thirds cf\">\n          {\n            resumeData.portfolio && resumeData.portfolio.map((item)=>{\n              return(\n                <div className=\"columns portfolio-item\">\n                  <div className=\"item-wrap\">\n                    <a href=\"#modal-01\">\n                      <img src={`${item.imgurl}`}className=\"item-img\"/>\n\n                      <div className=\"overlay\">\n                        <div className=\"portfolio-item-meta\">\n                          <h5>{item.name}</h5>\n                          <p>{item.description}\n                          </p>\n\n                        </div>\n                      </div>\n                    </a>\n                  </div>\n\n                  <div className=\"portfolio-links\">\n                    <p className=\"github\">\n                      <a href={`${item.imgrepo}`} target=\"_blank\"><i className=\"fa fa-3x fa-github\"></i></a>\n                    </p>\n                    <p className=\"deployedSite\">\n                      <a href={`${item.imglink}`} target=\"_blank\"><i className=\"fa fa-2x fa-desktop\"></i></a>\n                    </p>\n                  </div>\n\n\n\n                </div>\n              )\n            })\n          }\n          </div>\n        </div>\n      </div>\n  </section>\n        );\n  }\n}","import React, { Component } from 'react';\nexport default class ContactUs extends Component {\n\n\n\n\n\n  render() {\n    // let resumeData = this.props.resumeData;\n    return (\n      <section id=\"contact\">\n          <div className=\"row section-head contact-text\">\n            <div style={{width: \"100%\"}} className=\"columns\">\n              <p className=\"lead\">\n              Please conact me if you have any questions or suggestions!\n              </p>\n              <a\n              href=\"mailto:elliotpark410@gmail.com\"\n              >\n              <i className='fa fa-envelope email'></i></a>\n            </div>\n          </div>\n        </section>\n        );\n  }\n}","\nimport React, { Component } from 'react';\nexport default class Footer extends Component {\n  render() {\n    let resumeData = this.props.resumeData;\n    return (\n      <footer>\n      <div className=\"row\">\n        <div className=\"twelve columns\">\n          <ul className=\"social-links\">\n            {\n              resumeData.socialLinks && resumeData.socialLinks.map((item)=>{\n                return(\n                  <li>\n                    <a href={item.url}>\n                    <i className={item.className} />\n                    </a>\n                  </li>\n                )\n              })\n            }\n          </ul>\n          \n        </div>\n        <div id=\"go-top\"><a className=\"smoothscroll\" title=\"Back to Top\" href=\"#home\"><i className=\"icon-up-open\" /></a></div>\n      </div>\n    </footer>\n    );\n  }\n}","let resumeData = {\n    \"name\": \"Elliot Park\",\n    \"role\": \"Backend Developer\",\n    \"linkedinId\":\"https://www.linkedin.com/in/elliot-park/\",\n    \"email\": \"elliotpark410@gmail.com\",\n    \"roleDescription\": \"I'm a junior back end developer based in Bali, Indonesia. Currently, I'm focused on building a decentralized, blockchain native payment system with Jagad.\",\n    \"socialLinks\":[\n        {\n          \"name\":\"linkedin\",\n          \"url\":\"https://www.linkedin.com/in/elliot-park/\",\n          \"className\":\"fa fa-linkedin\"\n        },\n        {\n          \"name\":\"github\",\n          \"url\":\"https://github.com/elliotpark410/\",\n          \"className\":\"fa fa-github\"\n        },\n        {\n          \"name\":\"twitter\",\n          \"url\":\"http://twitter.com/ElliotPark15\",\n          \"className\":\"fa fa-twitter\"\n        }\n      ],\n    \"aboutme\":\"My journey into coding began with University of California, Berkeley's Full Stack Web Development bootcamp. There were a lot of sleepless nights, but it was worth every second. After I deployed my first app, I was hooked and I knew this is what I wanted to do for the rest of my life. Currently, I am helping build the backend for Jagad which provides a decentralized stablecoin pegged to the Indonesian rupiah. I grew up in Southern California, lived in the Bay Area for a few years, and I am living in Bali, Indonesia. If I am not in front of my computer you can find me surfing at the beach or doing jiu jitsu on the mats. Please don't hesitate to reach out, and thank you for checking out my portfolio!\",\n    \"address\":\"Bali, Indonesia\",\n    \"website\":\"E: elliotpark410@gmail.com\",\n    \"education\":[\n      {\n        \"UniversityName\":\"University of California, Santa Barbara\",\n        \"specialization\":\"Philosophy\",\n        \"MonthOfPassing\":\"Jun\",\n        \"YearOfPassing\":\"2016\",\n      },\n      {\n        \"UniversityName\":\"University of California, Berkeley\",\n        \"specialization\":\"Full Stack Web Development Bootcamp\",\n        \"MonthOfPassing\":\"Mar\",\n        \"YearOfPassing\":\"2022\",\n      }\n    ],\n    \"work\":[\n      {\n        \"CompanyName\":\"Jagad\",\n        \"specialization\":\"Junior Back End Developer\",\n        \"YearOfLeaving\":\"Present\",\n        \"Achievements\": \"Build API endpoints for fintech app with tech stack that includes Git, TypeScript, React, Node, Express, Prisma, MySQL, Postman, and Docker. Write 100+ unit tests and end-to-end tests to verify the functionality of back-end processing, relational database interactions, and business logic. Refactor database schema to eliminate redundant data, minimize data modification errors, and simplify query process. Add new tables that follow database normalization design and write complex relational queries with nested joins. Utilize DBeaver to easily visualize and manage data for smoke tests that verify API endpoint accuracy. Debug code in an efficient and timely manner by using tools like chatGPT and Stack Overflow. Develop a custom Slack application that automatically sends asset  data from Fireblocks API. Run CI/CD jobs with Github Actions to automate build, test, and deployment pipelines\"\n      },\n      {\n        \"CompanyName\":\"SingleStore\",\n        \"specialization\":\"Account Executive\",\n        \"MonthOfLeaving\":\"Oct\",\n        \"YearOfLeaving\":\"2021\",\n        \"Achievements\": \"Utilized resourcefulness and creativity to generate new business revenue with a data-driven mindset. Generated new business while expanding footprint into existing accounts with high outbound activity. Built long lasting relationships with key stakeholders by providing solutions to business challenges. Cooperated extensively with marketing team during campaigns to analyze data and identify trends. Practiced clear communication of product by studying value proposition and technical capabilities. Collaborated closely with sales engineer to provide an honest and helpful overview of product\"\n      },\n      {\n        \"CompanyName\":\"Walpole & Co., LLP\",\n        \"specialization\":\"Tax Consultant\",\n        \"MonthOfLeaving\":\"Jun\",\n        \"YearOfLeaving\":\"2019\",\n        \"Achievements\": \"Provided tax consultation with clients in tech, manufacturing, financial, and real estate industries. Conducted training sessions to prepare a couple hundred employees for new software adoption. Implemented SaaS accounting software and improved inventory processing with analytics. Utilized professional software such as Lacerte, Quickbooks, and Microsoft Excel\"\n      }\n    ],\n    \"skillsDescription\":\"Git, Bash, HTML, CSS, React, JavaScript, Jest, TypeScript, SQL, Node, Express, Prisma, Sequelize, Mongoose, MySQL, MongoDB, Postman, Insomnia, Docker, Linux, and OOP\",\n    \"skills\":[\n      {\n        \"skillname\":\"Node\"\n      },\n      {\n        \"skillname\":\"MySQL\"\n      },\n      {\n        \"skillname\":\"TypeScript\"\n      },\n      {\n        \"skillname\":\"Jest\"\n      }\n    ],\n    \"portfolio\":[\n      {\n        \"name\":\"Code Quiz\",\n        \"description\":\"A simple code quiz that allows users to test their JavaScript knowledge.\",\n        \"imgurl\":\"images/portfolio/code-quiz.png\",\n        \"imgrepo\": \"https://github.com/elliotpark410/Code-Quiz\",\n        \"imglink\": \"https://elliotpark410.github.io/Code-Quiz/\"\n      },\n      {\n        \"name\":\"Tech Blog\",\n        \"description\":\"A CMS-style blog site similar to Wordpress.\",\n        \"imgurl\":\"images/portfolio/tech-blog.png\",\n        \"imgrepo\": \"https://github.com/elliotpark410/Tech-Blog\",\n        \"imglink\": \"https://ep-tech-blog.herokuapp.com/\"\n      },\n      {\n        \"name\":\"Team Profile Generator\",\n        \"description\":\"A command-line application that generates a team profile.\",\n        \"imgurl\":\"images/portfolio/team-profile.png\",\n        \"imgrepo\": \"https://github.com/elliotpark410/Team-Profile-Generator\",\n        \"imglink\": \"https://elliotpark410.github.io/Team-Profile-Generator/\"\n      },\n      {\n        \"name\":\"Text Editor\",\n        \"description\":\"A text editor app that runs in the browser and meets the Progressive Web App criteria.\",\n        \"imgurl\":\"images/portfolio/text-editor.png\",\n        \"imgrepo\": \"https://github.com/elliotpark410/Text-Editor\",\n        \"imglink\": \"https://drive.google.com/file/d/1JcmvHDmYU6WjGITv-FaK7d9HGSF34AQG/view\"\n      }\n    ]\n  }\n\n  export default resumeData","import React, { Component } from 'react';\nimport Header from './components/Header';\nimport About from './components/About';\nimport Resume from './components/Resume';\nimport Portfolio from './components/Portfolio';\nimport ContactUs from './components/ContactUs';\nimport Footer from './components/Footer';\nimport resumeData from './resumeData';\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <Header resumeData={resumeData}/>\n        <About resumeData={resumeData}/>\n        <Resume resumeData={resumeData}/>\n        <Portfolio resumeData={resumeData}/>\n        <ContactUs resumeData={resumeData}/>\n        <Footer resumeData={resumeData}/>\n      </div>\n    );\n  }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}