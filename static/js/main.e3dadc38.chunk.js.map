{"version":3,"sources":["components/Header.js","components/About.js","components/Resume.js","components/Portfolio.js","components/ContactUs.js","components/Footer.js","resumeData.js","App.js","serviceWorker.js","index.js"],"names":["Header","_Component","_classCallCheck","this","_possibleConstructorReturn","_getPrototypeOf","apply","arguments","_inherits","_createClass","key","value","resumeData","props","React","createElement","Fragment","id","className","href","title","name","style","color","fontFamily","roleDescription","socialLinks","map","item","url","target","Component","About","src","alt","aboutme","Resume","work","CompanyName","specialization","MonthOfLeaving","YearOfLeaving","Achievements","education","UniversityName","MonthOfPassing","YearOfPassing","skillsDescription","skills","concat","skillname","toLowerCase","Porfolio","portfolio","imgurl","description","imgrepo","imglink","ContactUs","width","Footer","role","linkedinId","email","address","website","App","Portfolio","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.e3dadc38.chunk.js","sourcesContent":["import React, { Component } from 'react';\nexport default class Header extends Component {\n  render() {\n    let resumeData = this.props.resumeData;\n    return (\n      <React.Fragment>\n\n      <header id=\"home\">\n         <nav id=\"nav-wrap\">\n            <a className=\"mobile-btn\" href=\"#nav-wrap\" title=\"Show navigation\">Show navigation</a>\n          <a className=\"mobile-btn\" href=\"#\" title=\"Hide navigation\">Hide navigation</a>\n            <ul id=\"nav\" className=\"nav\">\n               <li className=\"current\"><a className=\"smoothscroll\" href=\"#home\">Home</a></li>\n               <li><a className=\"smoothscroll\" href=\"#about\">About</a></li>\n             <li><a className=\"smoothscroll\" href=\"#resume\">Resume</a></li>\n               <li><a className=\"smoothscroll\" href=\"#portfolio\">Works</a></li>\n               <li><a className=\"smoothscroll\" href=\"#contact\">Contact</a></li>\n            </ul>\n         </nav>\n\n         <div className=\"row banner\">\n            <div className=\"banner-text\">\n               <h1 className=\"responsive-headline\">Greetings, I'm {resumeData.name}.</h1>\n               <h2 style={{color:'#fff', fontFamily:'sans-serif '}}>{resumeData.roleDescription}\n               </h2>\n               <hr/>\n               <ul className=\"social\">\n                  {\n                    resumeData.socialLinks && resumeData.socialLinks.map(item =>{\n                      return(\n                              <li key={item.name}>\n                                <a href={item.url} target=\"_blank\"><i className={item.className}></i></a>\n                              </li>\n                            )\n                          }\n                    )\n                  }\n               </ul>\n            </div>\n         </div>\n\n         <p className=\"scrolldown\">\n            <a className=\"smoothscroll\" href=\"#about\"><i className=\"icon-down-circle\"></i></a>\n         </p>\n\n      </header>\n      </React.Fragment>\n    );\n  }\n}","import React, { Component } from 'react';\nexport default class About extends Component {\n  render() {\n    let resumeData = this.props.resumeData;\n    return (\n      <section id=\"about\">\n         <div className=\"row\">\n\n            <div className=\"three columns\">\n\n               <img className=\"profile-pic\"  src=\"images/profilepic.jpg\" alt=\"\" />\n\n            </div>\n\n            <div className=\"nine columns main-col\">\n\n               <h2>About Me</h2>\n               <p>\n               {\n                 resumeData.aboutme\n               }\n               </p>\n\n               {/* <div className=\"row\">\n\n                  <div className=\"columns contact-details\">\n\n                  <h2>Contact Details</h2>\n                  <p className=\"address\">\n       \t\t\t\t\t\t<span>{resumeData.name}</span>\n                     <br></br>\n       \t\t\t\t\t\t   <span>\n                     {resumeData.address}\n                    </span>\n                    <br></br>\n                    <span>{resumeData.website}</span>\n       \t\t\t\t\t   </p>\n                  </div>\n               </div> */}\n            </div>\n         </div>\n      </section>\n    );\n  }\n}","import React, { Component } from 'react';\nexport default  class Resume extends Component {\n  render() {\n    let resumeData = this.props.resumeData;\n    return (\n      <section id=\"resume\">\n\n<div className=\"row work\">\n            <div className=\"three columns header-col\">\n               <h1><span>Work</span></h1>\n            </div>\n\n            <div className=\"nine columns main-col\">\n              {\n                resumeData.work && resumeData.work.map((item) => {\n                  return(\n                    <div className=\"row item\">\n                       <div className=\"twelve columns\">\n                          <h3>{item.CompanyName}</h3>\n                          <p className=\"info\">\n                          {item.specialization}\n                          <span>&bull;</span> <em className=\"date\">{item.MonthOfLeaving} {item.YearOfLeaving}</em></p>\n                          {}\n                          <p>\n                          {item.Achievements}\n                          </p>\n                       </div>\n\n                    </div>\n\n                  )\n                })\n              }\n            </div>\n         </div>\n\n         <div className=\"row education\">\n\n            <div className=\"three columns header-col\">\n               <h1><span>Education</span></h1>\n            </div>\n\n            <div className=\"nine columns main-col\">\n              {\n                resumeData.education && resumeData.education.map((item)=>{\n                  return(\n                    <div className=\"row item\">\n                       <div className=\"twelve columns\">\n                          <h3>{item.UniversityName}</h3>\n                          <p className=\"info\">\n                          {item.specialization}\n                          <span>&bull;</span> <em className=\"date\">{item.MonthOfPassing} {item.YearOfPassing}</em></p>\n                          <p>\n                          {item.Achievements}\n                          </p>\n                       </div>\n                    </div>\n                  )\n                })\n              }\n            </div>\n         </div>\n\n\n\n         <div className=\"row skill\">\n\n            <div className=\"three columns header-col\">\n               <h1><span>Skills</span></h1>\n            </div>\n\n            <div className=\"nine columns main-col\">\n\n               <p>\n               {resumeData.skillsDescription}\n               </p>\n\n   \t\t\t\t<div className=\"bars\">\n\n   \t\t\t\t   <ul className=\"skills\">\n                {\n                  resumeData.skills && resumeData.skills.map((item) => {\n                    return(\n                      <li>\n                      <span className={`bar-expand ${item.skillname.toLowerCase()}`}>\n                      </span><em>{item.skillname}</em>\n                      </li>\n                    )\n                  })\n                }\n\n   \t\t\t\t\t</ul>\n\n   \t\t\t\t</div>\n\n   \t\t\t</div>\n\n         </div>\n\n      </section>\n    );\n  }\n}","import React, { Component } from 'react';\nexport default class Porfolio extends Component {\n  render() {\n    let resumeData = this.props.resumeData;\n    return (\n      <section id=\"portfolio\">\n      <div className=\"row\">\n        <div className=\"twelve columns collapsed\">\n          <h1>Check Out Some of My Work</h1>\n          <div id=\"portfolio-wrapper\" className=\"bgrid-quarters s-bgrid-thirds cf\">\n          {\n            resumeData.portfolio && resumeData.portfolio.map((item)=>{\n              return(\n                <div className=\"columns portfolio-item\">\n                  <div className=\"item-wrap\">\n                    <a href=\"#modal-01\">\n                      <img src={`${item.imgurl}`}className=\"item-img\"/>\n\n                      <div className=\"overlay\">\n                        <div className=\"portfolio-item-meta\">\n                          <h5>{item.name}</h5>\n                          <p>{item.description}\n                          </p>\n\n                        </div>\n                      </div>\n                    </a>\n                  </div>\n\n                  <div className=\"portfolio-links\">\n                    <p className=\"github\">\n                      <a href={`${item.imgrepo}`} target=\"_blank\"><i className=\"fa fa-3x fa-github\"></i></a>\n                    </p>\n                    <p className=\"deployedSite\">\n                      <a href={`${item.imglink}`} target=\"_blank\"><i className=\"fa fa-2x fa-desktop\"></i></a>\n                    </p>\n                  </div>\n\n\n\n                </div>\n              )\n            })\n          }\n          </div>\n        </div>\n      </div>\n  </section>\n        );\n  }\n}","import React, { Component } from 'react';\nexport default class ContactUs extends Component {\n\n\n\n\n\n  render() {\n    // let resumeData = this.props.resumeData;\n    return (\n      <section id=\"contact\">\n          <div className=\"row section-head contact-text\">\n            <div style={{width: \"100%\"}} className=\"columns\">\n              <p className=\"lead\">\n              Please conact me if you have any questions or suggestions!\n              </p>\n              <a\n              href=\"mailto:elliotpark410@gmail.com\"\n              >\n              <i className='fa fa-envelope email'></i></a>\n            </div>\n          </div>\n        </section>\n        );\n  }\n}","\nimport React, { Component } from 'react';\nexport default class Footer extends Component {\n  render() {\n    let resumeData = this.props.resumeData;\n    return (\n      <footer>\n      <div className=\"row\">\n        <div className=\"twelve columns\">\n          <ul className=\"social-links\">\n            {\n              resumeData.socialLinks && resumeData.socialLinks.map((item)=>{\n                return(\n                  <li>\n                    <a href={item.url}>\n                    <i className={item.className} />\n                    </a>\n                  </li>\n                )\n              })\n            }\n          </ul>\n          \n        </div>\n        <div id=\"go-top\"><a className=\"smoothscroll\" title=\"Back to Top\" href=\"#home\"><i className=\"icon-up-open\" /></a></div>\n      </div>\n    </footer>\n    );\n  }\n}","let resumeData = {\n    \"name\": \"Elliot Park\",\n    \"role\": \"Full Stack Web Developer\",\n    \"linkedinId\":\"https://www.linkedin.com/in/elliot-park/\",\n    \"email\": \"elliotpark410@gmail.com\",\n    \"roleDescription\": \"I am here to infiltrate earthling technology with Full Stack Web Development.\",\n    \"socialLinks\":[\n        {\n          \"name\":\"linkedin\",\n          \"url\":\"https://www.linkedin.com/in/elliot-park/\",\n          \"className\":\"fa fa-linkedin\"\n        },\n        {\n          \"name\":\"github\",\n          \"url\":\"https://github.com/elliotpark410/\",\n          \"className\":\"fa fa-github\"\n        }\n      ],\n    \"aboutme\":\"My journey into coding began with the Full Stack Web Development bootcamp at the University of California, Berkeley. Despite the sleepless nights, every moment was worth it. The thrill of deploying my first app ignited a passion within me, solidifying my decision to pursue coding as a lifelong career. I thrive on learning about emerging technologies and relish the challenge of solving complex problems. With nearly two years of experience as a Full Stack Developer, I've had the opportunity to contribute to a wide range of projects, including the design of customer-facing websites and the development of RESTful API endpoints for a fintech mobile app. One of my proudest achievements has been successfully integrating the server with third-party APIs to implement essential features such as transaction confirmation, P2P transfers, and push notifications. At Jagad, where I currently work as a Node Developer, I've honed my skills in building secure and scalable API endpoints that adhere to strict security standards. I've collaborated with cross-functional teams to identify partnership requirements and develop open API features for payment gateway capability. When I'm not immersed in code, you can find me riding the waves at the beach or practicing jiu jitsu on the mats. I thrive on new challenges and am always eager to expand my horizons. Don't hesitate to reach out — I'm excited to connect and share more about my journey in tech!\",\n    \"address\":\"Irvine, California\",\n    \"website\":\"E: elliotpark410@gmail.com\",\n    \"education\":[\n      {\n        \"UniversityName\":\"University of California, Berkeley\",\n        \"specialization\":\"Full Stack Web Development Bootcamp\",\n        \"MonthOfPassing\":\"Mar\",\n        \"YearOfPassing\":\"2022\",\n      },\n      {\n        \"UniversityName\":\"University of California, Santa Barbara\",\n        \"specialization\":\"Philosophy\",\n        \"MonthOfPassing\":\"Jun\",\n        \"YearOfPassing\":\"2016\",\n      }\n    ],\n    \"work\":[\n      {\n        \"CompanyName\":\"Jagad\",\n        \"specialization\":\"Full Stack Developer\",\n        \"MonthOfLeaving\":\"Feb\",\n        \"YearOfLeaving\":\"2024\",\n        \"Achievements\": `\n        • Design and debug RESTful API endpoints for a fintech mobile application that meets strict security standards, ensuring the protection of sensitive user data\n        • Develop hundreds unit tests, integration tests, and end-to-end tests to verify the functionality of back-end processing, database interactions, and business logic\n        • Coordinate with other engineering teams to identify partnership requirements, create documentation, and build open API features for payment gateway capability\n        • Create interoperability for Telegram bot to interact with backend API endpoints, allowing users to redeem to bank and redeem to e-wallet.\n        • Improve customer experience by integrating server with third-party APIs like Fireblocks, DurianPay, Solana, ICP, and Slack\n        • Refactor database schema to adhere to database normalization design principles, enhancing performance\n        • Collaborate with a team of 8 developers to build diagrams and workflows for new feature specifications\n        `\n      },\n    ],\n    \"skillsDescription\":\"Git, Bash, HTML, CSS, React, JavaScript, Jest, TypeScript, SQL, Node, Express, Prisma, Sequelize, Mongoose, MySQL, MongoDB, Postman, Insomnia, Docker, Linux, Sentry, CI/CD\",\n    \"portfolio\":[\n      {\n        \"name\":\"Code Quiz\",\n        \"description\":\"A simple code quiz that allows users to test their JavaScript knowledge.\",\n        \"imgurl\":\"images/portfolio/code-quiz.png\",\n        \"imgrepo\": \"https://github.com/elliotpark410/Code-Quiz\",\n        \"imglink\": \"https://elliotpark410.github.io/Code-Quiz/\"\n      },\n      {\n        \"name\":\"Tech Blog\",\n        \"description\":\"A CMS-style blog site similar to Wordpress.\",\n        \"imgurl\":\"images/portfolio/tech-blog.png\",\n        \"imgrepo\": \"https://github.com/elliotpark410/Tech-Blog\",\n        \"imglink\": \"https://ep-tech-blog.herokuapp.com/\"\n      },\n      {\n        \"name\":\"Team Profile Generator\",\n        \"description\":\"A command-line application that generates a team profile.\",\n        \"imgurl\":\"images/portfolio/team-profile.png\",\n        \"imgrepo\": \"https://github.com/elliotpark410/Team-Profile-Generator\",\n        \"imglink\": \"https://elliotpark410.github.io/Team-Profile-Generator/\"\n      },\n      {\n        \"name\":\"Text Editor\",\n        \"description\":\"A text editor app that runs in the browser and meets the Progressive Web App criteria.\",\n        \"imgurl\":\"images/portfolio/text-editor.png\",\n        \"imgrepo\": \"https://github.com/elliotpark410/Text-Editor\",\n        \"imglink\": \"https://drive.google.com/file/d/1JcmvHDmYU6WjGITv-FaK7d9HGSF34AQG/view\"\n      }\n    ]\n  }\n\n  export default resumeData","import React, { Component } from 'react';\nimport Header from './components/Header';\nimport About from './components/About';\nimport Resume from './components/Resume';\nimport Portfolio from './components/Portfolio';\nimport ContactUs from './components/ContactUs';\nimport Footer from './components/Footer';\nimport resumeData from './resumeData';\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <Header resumeData={resumeData}/>\n        <About resumeData={resumeData}/>\n        <Resume resumeData={resumeData}/>\n        <Portfolio resumeData={resumeData}/>\n        <ContactUs resumeData={resumeData}/>\n        <Footer resumeData={resumeData}/>\n      </div>\n    );\n  }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}